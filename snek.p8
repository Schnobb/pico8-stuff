pico-8 cartridge // http://www.pico-8.com
version 29
__lua__
function _init()
 pi=3.1415
 
 snake={
  x=15,
  y=15,
  sx=1,
  sy=0,
  tail={},
  total=0
 }
 
 gs={
  tick=0,
  maxtick=60,
  speed=10,
  fade_speed=1,
  debug={},
  light_t=0,
  max_light_t=20,
  light_trig_t=0,
  max_light_trig_t=360,
  shake=0,
  
  mode="",
  title="sand-snake"
 }
 
 part={
  pill={}
 }
 
 perl={
  maxx=128,
  maxy=128,
  screenw=16,
  screenh=16,
  spd_mod=0.05,
  col=9,
  grad={},
  interp=smoothstep,
  x=64,
  y=64
 }
 
 init_grad()
 init_colors()
 
 scl=4
 pill={}
 rndpill()
 
 setmode("start")
end

function _update60()
 gs.debug={}
 
 if gs.mode=="start" then
  update_start()
 elseif gs.mode=="game" then
  update_game()
 elseif gs.mode=="dead" then
  update_dead()
 end
end

function _draw()
 if gs.mode=="start" then
  draw_start()
 elseif gs.mode=="game" then
  draw_game()
 elseif gs.mode=="dead" then
  draw_dead()
 end
 
 camera()
 for _,v in pairs(gs.debug) do
  color(7)
  printb(v,7)
 end
end

function setmode(mode)
 if mode=="start" then
  music(0)
  gs.mode=mode
 elseif mode=="game" then
  music(3)
  gs.mode=mode
  snake.total=0
  snake.tail={}
 elseif mode=="dead" then
  music(2)
  gs.mode=mode
 end
 
 pal()
 cls(0)
 gs.tick=0
end

function debug(str)
 add(gs.debug,str)
end
-->8
-- logic

function tick()
 add(snake.tail,{snake.x,snake.y})
 
 while #snake.tail>snake.total do
  deli(snake.tail,1)
 end

 snake.x+=snake.sx
 snake.y+=snake.sy
 
 --snake.x=mid(0,snake.x,127\scl)
 --snake.y=mid(0,snake.y,127\scl)
 
 snake.x=snake.x%(128\scl)
 snake.y=snake.y%(128\scl)
 
 perl.x=mid(0,perl.x+snake.sx*perl.spd_mod,perl.maxx)
 perl.y=mid(0,perl.y+snake.sy*perl.spd_mod,perl.maxy)
  
 if collide(snake.x,snake.y,pill[1],pill[2]) then
  sfx(0)
  shakescr(5)
  snake.total+=1
  rndpill()
  part_pill(snake.x*scl,snake.y*scl)
 end
 
 if collide_tail(snake.x,snake.y) then
  setmode("dead")
 end
end

function rndpill()
 local x,y
 
 repeat
  x,y=flr(rnd(127\scl)),flr(rnd(127\scl))
 until not collide(snake.x,snake.y,x,y) and not collide_tail(x,y)
 
 pill={x,y}
end

function collide(x0,y0,x1,y1)
 return x0==x1 and y0==y1
end

function collide_tail(x,y)
 for _,t in pairs(snake.tail) do
  if collide(x,y,t[1],t[2]) then
   return true
  end
 end
end

function update_start()
 if gs.tick>0 then
  if gs.tick>=gs.maxtick then
   setmode("game")
   return
  end
  
  gs.tick+=gs.fade_speed
 else
  if gs.light_trig_t<=0 and gs.light_t<=0 then
   sfx(2)
   shakescr(10)
   gs.light_t=gs.max_light_t
   local r=((rnd()-0.5)*2) * (gs.max_light_trig_t*0.25)
   gs.light_trig_t=gs.max_light_trig_t+r
  else
   gs.light_trig_t=max(0,gs.light_trig_t-1)
   gs.light_t=max(0,gs.light_t-1)
  end
 
  if btnp(❎) then
	  sfx(1)
	  gs.tick=1
	 end
 end
end

function update_game()
 for _,p in pairs(part.pill) do
  part_pill_update(p)
 end
 
 if btnp(⬆️) then
  snake.sx=0 snake.sy=-1
 elseif btnp(⬇️) then
  snake.sx=0 snake.sy=1
 elseif btnp(⬅️) then
  snake.sx=-1 snake.sy=0
 elseif btnp(➡️) then
  snake.sx=1 snake.sy=0
 end
 
 debug(snake.total)
 
 gs.tick+=gs.speed
 if gs.tick>=gs.maxtick then
  gs.tick=0
  tick()
 end
end

function update_dead()
 if btnp(❎) then
  setmode("start")
  return
 end

 gs.tick+=4
 if gs.tick>=gs.maxtick then
  gs.tick=0
 end
end
-->8
-- draw
function draw_start()
 drawshake()
 if gs.tick<=0 then
  local backcol=0
  
  if gs.light_t>0 then
   if gs.light_t>0.75*gs.max_light_t then
    cls(7)
    return
   end
   
   if rnd()>0.15 then backcol=7 end
  end
  
  cls(backcol)
  sspr(0,8,127,90,0,127-90)
  
  camera()
  
  local sw,sh=#gs.title*4,6
  local x,y=128/2-sw\2,128/2-sh\2-16
  printwob(gs.title,x,y,5,0.5,1)
  printwob(gs.title,x,y,6,0.5,2)
  printwob(gs.title,x,y,7,0.5,4)
  printwob(gs.title,x,y,8,0.5,9)
  printwob(gs.title,x,y,9,0.5,12)
  printwob(gs.title,x,y,10,0.5,7)
  
  local msg="press ❎ to start"
  sw,sh=#msg*4,6
  x,y=128/2-sw\2,100
  
  printwob(msg,x,y+1,3,0.3,5)
  printwob(msg,x,y,3,0.3,7)
 else
  local flsh=flr(time()*10)%2
  cls(flsh*5)
 end
end

function printwob(str,x,y,of,spd,col)
 local woby=sin(time()*spd)
 print(str,x,y+flr(of*woby),col)
end

function draw_game()
 drawshake()
 cls(1)
 drawcloud()
 
 for _,tail in pairs(snake.tail) do
  drawseg(tail[1],tail[2],15)
 end
 
 drawseg(pill[1],pill[2],12)
 drawseg(snake.x,snake.y,14)
 
 drawpart()
end

function draw_dead()
 drawshake()
 if gs.tick==0 then
  cls(10)
	 for i=0,16 do
	  local r=flr(rnd(3))+11 
	  local msg="game over"
	  
	  if rnd()<0.1 then
	   msg="dead dead dead dead dead dead dead dead dead dead dead dead dead dead dead dead dead dead dead dead dead dead dead dead dead dead dead dead dead dead dead dead dead dead dead dead dead dead dead dead dead dead dead dead dead dead dead dead dead dead"
	  end
	  
	  printrnd(msg,r)
	 end
 end
 
 pal(10,choice({8,136}),1)
 
 pal(11,choice({7,136,8}),1)
 pal(12,choice({7,136,8}),1)
 pal(13,choice({7,136,8}),1)
 
 local msg="press ❎ to restart"
 local sw=#msg*4
 local x,y=(64-sw\2),64
 print(msg,x,y-1,7)
 print(msg,x,y+1,7)
 print(msg,x,y,0)
end

function printrnd(str,col)
 local x,y=flr(rnd(256)-128),flr(rnd(256)-128)
 print(str,x,y,col)
end

function choice(arr)
 local r=flr(rnd(#arr))+1
 return arr[r]
end

function drawseg(x,y,col)
 rectfill(x*scl,y*scl,(x+1)*scl-1,(y+1)*scl-1,hcolor(col,1))
end

function drawshake()
 local ofx,ofy=rnd(gs.shake)-gs.shake/2,rnd(gs.shake)-gs.shake/2
 
 gs.shake=max(gs.shake-1,0)
 camera(ofx,ofy)
end

function drawpart()
 for _,p in pairs(part.pill) do
  local w,h=scl*p.scl,scl*p.scl
  local x,y=(p.x+scl/2)-w/2,(p.y+scl/2)-h/2
  rectfill(x,y,x+w,y+h,hcolor(p.c,1))
 end
end

function drawcloud()
 local xres,yres=flr(128/perl.screenw),flr(128/perl.screenh)
 
 for y=0,perl.screenh do
  for x=0,perl.screenw do
   local x0=(x/perl.screenw)+perl.x
   local y0=(y/perl.screenh)+perl.y
   local v=perlin(x0,y0)
   local c=hcolor(perl.col,min(v,1))
   rectfill(x*xres,y*yres,x*xres+xres,y*yres+yres,c)
  end
 end
end
-->8
-- utils

function shakescr(mag)
 gs.shake=mag
end

function printb(str,colf,colb,x,y)
 str=str and str.."" or ""
 colf=colf or peek(0x5f25)
 colb=colb or 0
 x=x or peek(0x5f26)
 y=y or peek(0x5f27)
 local w,h=#str*4,6
 rectfill(x,y,x+w,y+h,colb)
 print(str,x+1,y+1,colf)
 poke(0x5f27,y+6)
 poke(0x5f26,x)
end

-- linear algebra stuff
function vec2(x,y)
 return {
  x=x,
  y=y,
  norm=function(self)
   local l=len(self.x,self.y)
   self.x/=l
   self.y/=l
   return self
  end
 }
end

function len(x,y)
 return sqrt(x^2+y^2)
end

function rot2d(vec,r)
 return vec2(
  vec.x*cosr(r)-vec.y*sinr(r),
  vec.x*sinr(r)+vec.y*cosr(r)
 )
end

function rot(x,y,r)
 return x*cosr(r)-y*sinr(r),x*sinr(r)+y*cosr(r)
end

function rad2deg(r)
 return r*180/pi
end

function deg2rad(d)
 return d*pi/180
end

function sinr(r)
 return sin(r/(2*pi))
end

function cosr(r)
 return cos(r/(2*pi))
end

function tanr(r)
 return sinr(r)/cosr(r)
end

-- maths stuff
function decimal(x)
 return x-flr(x)
end

function lerp(x1,x2,w)
 return (1-w)*x1+w*x2
end

function smoothstep(x1,x2,w)
	w=mid(w,0,1)
	w=(w*w*(3-2*w))
	--w=-2*w^3+3*w^2
	return (x2-x1)*w+x1
end

function smootherstep(x1,x2,w)
	w=mid(w,0,1)
	--w=w*w*w*(10+(-15+6*w)*w)
	w=w*w*w*(w*(w*6-15)+10)
	--w=6*w^5-15*w^4+10*w^3
	return (x2-x1)*w+x1
end
-->8
-- part

function part_pill(x,y)
 local p={
  x=x,
  y=y,
  t=0,
  max_t=10,
  c=12,
  c_ramp={12,6,7},
  scl=1,
  scl_spd=1.1
 }
 
 add(part.pill,p)
end

function part_pill_update(p)
 if p.t>=p.max_t then
  del(part.pill,p)
  return
 end
 
 p.t+=1
 p.scl*=p.scl_spd
 
 local r=flr((p.t/p.max_t)*#p.c_ramp)+1
 r=mid(1,r,#p.c_ramp)
 p.c=p.c_ramp[r]
end
-->8
-- noise

function init_grad(seed)
 perl.grad={}
 if seed then srand(seed) end
 
 for y=0,perl.maxy do
  perl.grad[y]={}
 	for x=0,perl.maxx do
 	 -- initiates a vector and 
 	 -- rotates it randomly in
 	 -- a 360 deg angle
 	 
 		local v=vec2(1,0)
 		v=rot2d(v,rnd(pi*2))
 	 v:norm()
 		perl.grad[y][x]=v
		end
 end
end

function dot_grad(ix,iy,x,y)
 local dx,dy=x-ix,y-iy
 return dx*perl.grad[iy][ix].x + dy*perl.grad[iy][ix].y
end

function perlin(x,y)
 local x0,x1=flr(x),flr(x)+1
 local y0,y1=flr(y),flr(y)+1
 
 x0=x0%perl.maxx
 y0=y0%perl.maxy
 x1=x1%perl.maxx
 y1=y1%perl.maxy

 local sx,sy=x-x0,y-y0
 local n0,n1,ix0,ix1
 
 n0=dot_grad(x0,y0,x,y)
 n1=dot_grad(x1,y0,x,y)
 ix0=perl.interp(n0,n1,sx)
 
 n0=dot_grad(x0,y1,x,y)
 n1=dot_grad(x1,y1,x,y)
 ix1=perl.interp(n0,n1,sx)
 
 return (perl.interp(ix0,ix1,sy)+1)/2
end
-->8
-- color stuff

function init_colors(res,bright)
 -- enable color fill patterns
 poke(0x5f34,1)
 
 -- res: resolution of brightness gradient, default 128
 res=res or 128
 
 bright=bright or {
  0b0.1000000000000000,
  0b0.1000000000100000,
  0b0.1000000010100000,
  0b0.1010000010100000,
  0b0.1010010010100000,
  0b0.1010010010100001,
  0b0.1010010010100101,
  0b0.1010010110100101,
  0b0.1110010110100101,
  0b0.1110010110110101,
  0b0.1110010111110101,
  0b0.1111010111110101,
  0b0.1111010111110111,
  0b0.1111110111110111,
  0b0.1111110111111111,
  0b0.1111111111111111
 }
 
 local hues={
  {0},
  {0,1},
  {0,1,2},
  {0,1,3},
  {0,1,2,4},
  {0,1,5},
  {0,1,5,6},
  {0,1,5,6,7},
  {0,1,2,8},
  {0,1,2,4,9},
  {0,1,2,4,9,10},
  {0,1,3,11,11},
  {0,1,13,12},
  {0,1,13},
  {0,1,8,14},
  {0,1,4,14,15}
 }
 
	colors={res=res}
	
	for i=0,#hues-1 do
 	local h=hues[i+1]
 	local hi=0
 	local hstep=res\(#h-1)
		colors[i]={}
			
		for j=0,res do
		 local b=smoothstep(0,#bright,(j%hstep)/hstep)
		 if j%hstep==0 then 
		  hi=hi+1
		 end
		 
		 -- setting first bit of the color
		 -- this enables the fill pattern stuff
		 local cleft=bor(0x1000,h[hi])
		 local cright=h[min(hi+1,#h)]
		 
		 colors[i][j]=bor(cleft,shl(cright,4))
		 colors[i][j]+=bright[flr(b)+1]
		end
	end
end

function hcolor(base,light)
	local l=light*colors.res
	return colors[base][flr(l)]
end

function next_rnd_pat(prev)
 while prev!=0xffff do
  local bit=flr(rnd(16))
  if band(2^bit,prev)==0 then
   return bor(2^bit,prev)
  end
 end
 
 return nil
end

function gen_rnd_pat()
 local pats={0}
 
 for i=1,16 do
  local n=next_rnd_pat(pats[i])
  add(pats,n)
 end
 
 for i=1,#pats do
 	pats[i]=band(0x0000.ffff,pats[i]>>16)
 end
 
 return pats
end
__gfx__
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00700700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00077000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00077000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00700700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000ee72eeeeee00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000fffffffff2e2ee7e2eee7000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000ffffff9fffffeeeee2eee2ee2e0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000fffffffffff9feeeeeeeeeeeeeeeee00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000ffffffff9ffffffeeeeeeeeeeeeeeeee0000000000000000000000000422200000000000000000000000000000000000000000000000000000000000
000000ffffff9ffffffffffeeeeeee7eeeeeeee2e000000000000000000000004422120000000000000000000000000000000000000000000000000000000000
00000fff9fffffffffff9ffeeeeeeeeeeeee7eeee000000000000000000000244422122000000000000000000000000000000000000000000000000000000000
0000f9fff9ffff9ffff99ffeeeeeeeeeeee22ee72e00000000000000000002442221211210000000000000000000000000000000000000000000000000000000
000fffffffffff9ff9ff9f9feeee7eee2eeee7222e00000000000000000024424212222100000000000000000000000000000000000000000000000000000000
00fffffffffff99f99f9999feeee2eeeeeee22eee200000000000000000242442112111101010000000000000000000000000000000000000000000000000000
00fffffffffff99f9ff9f9f9eeeeeeeee222e2e22200000000000000022424412221111100011000000000000000000000000000000000000000000000000000
0ffffff99fff999f999999f9222e22e9e22222222900000000000000244424222211111110001100000000000000000000000000000420000000000000000000
0ffff9ffffff9999000000090222e22922e2e2222900000000000002422441211111111110000001000000000000000000000000004222000000000000000000
0fffffffff9990090000000900022229222229200900000000000224444222111111111111100100100000000000000000000000042222000000000000000000
ffff9fffff9900090900000000000009000009000000000000002224221211111111111111110001110000000000000000000002242121000000000000000000
fff99fffff9900090900000000000009000009000000000000022424112111111111111111111000111000000000000000000024212111100100000000000000
fff9ffffff9900090000000000000009000000000000000002224421221111111111111111101000100100000000000000000241221111100000100000000000
9ff9f9ffff9900090000000000000000000000000000000222244212111111111111111111111110001010000000000000024212111121110001110000000000
9fff999ffff900000000000000000000000000000000002212212111111111111111111110111111001101000000000022242121111211111000000100000000
9fff99f9fff900000000000000000000000900000000222222221111111111111111111111111111000010100000000214221111112421111100000110000000
9fffff999ff990000000000000000000000900000002212212111111111111111111111111111111100010011002222222111111222421101100100001000000
9ff9fffff9ff99000000000000000000000900000222211221111112111111111111111111111111110000101122221211111112224211111110000010110000
9ffffff9f99ff9900000000000000000000000002212221111111122211111111111111111111111100000000011221111111122222111110111100001001000
0ff9ffffffff9ff99900000000000000000000222221111111111242111111111111111111111111111001001011111111112222224111111111100000001110
0ffffff9ff9f99fff999000000000000000021221211111111122242111111111111111111111111111100000001111111122121242111111111111000000001
00fffffffffff999fff9999000000000002212211111111111222421111111111111111111111111111111000100111122221221221111111111111110001011
00099f9ff9fff99f99ffff9900000002221221111111111112224211111111111111111111111101111111000001001221222224421110111101111111000000
00009999fffffff9999fffffffffff22221111111111111121242111111111111111111111111111111111100000010012222224221111111111111110100000
00000999ffffffffffffff9ff9ffffff211111191111111222411111111111111111111111111111111111110000100001224422111111111111111101111000
0000009999ffffffffffffffffff9fffff1111191111121242211111111111111111111111111111111101111000000000112221211111111111111111111110
0000000999999ffffffffff9f99f999fffff11191111212212111111111111111111111111111111111111111100000101011112111111111101111111111111
000000099099999f9fffffffff9f9ff9fffff1111112122421111111111111111111111111111111111111101110000000001111111111111111111111011110
00000000900009f999999fffffff99999fffff111221242221111111111111111111111111111111011111111110000000100011111111111111111111111111
000000009000000099999999fffffff99999fff12122422211111111111111111111111111111111111111111111100000001000111111111111111011111011
00000000900000002299f99ff99fff9ff9f99fff2222222111111111111111111111111111111111111111111111110000000001001111111111111111111110
000000009000000022219999f9ff9fff9f99ffff2241221111111111111111111111111111111111111111101111111000000000010011111111111111101111
00000000900000121111119999fff99999fff9fff222922111111111111111111111111111111111111111111111111110000000000000111111111111111111
0000000000002221111111199f999999999ff99fff22911111111111111111111111111111111111111111111111111111100000010000101111111111110101
000000000022111111111119f99999f9f9f99fff99f2911111111111111111111111111111111111111111111111111101110000000000000001111111111111
00000002121111111119111f9999f99999999999ffff911111111111111111111111111111111111111111111101111111111100000010010000101111111111
00122222111111111119111f9999999999f9f99999ff991111111111111111111111111111111111111111111111111111111110000000000000000001111111
22211111111111111119911f9f999f9ff9999ff999f9f99111111111111111111111111111111111111111111111111110111111100000000000000100000011
1111111111111111111991999999999999999999f999ff9111111111111111111111111111111111111111111111111111111111111000010001000000000100
1111111111111111119999999999999999999999f99999ff99111111111111111111111111111111111111111111111111111111111110000000001000000000
1111111111111111119999999444444444444999999999fff9991111111111111111111111111111111111111111111111111101111111100000000000001001
11111111111111119999994444444444444244444244449999999999111111111111111111111111111111111111111011111111111111111100000000000000
11111111111111999949444444444244442444444444424449999949999999111111111111111111111111111111111111111111111110111111000100010010
11111111191999944444424424444444444222444424244444244999999999499999911111111111111111111111111111111011111111111111100000000000
11111999999444444444444224424444244444444444444444424442499949999949994999111111111111111111111111111111111101111111011100000000
11999999944444242222444444444444422222222222222224444444444444424499999999949911111111111111111111111111111111111111111110000000
99999422242444444444444411111112222222222222212222222222244442444444444449999499991111111111111111111111111111111011111111110000
92244444441111222221222222221222122121212222222222222222222222244444242444249994949999911111111111111111110111111111111111111110
44444442222222122122222211112122212222222221222221121222212222222224444444442499249949949999991111111111111111111111011111110111
44422222221221222222211111111141110000000000000002222221122212221222222224244444499999999999999999111111111111111111111111111111
42222122212221111112111112111112111121111111112111111111111112122122112222244444424442449999444999999111111111111111111111111111
22121221112111111111111401111421111111111121111111111111111111122122122111112124222444444429999994499999999111111011111110111011
22111111111111121112111110000000000000040000112111112111112111111112222122122121122222244422449999994499999999911111111111111111
00111111200001111000000000000000011111111111111111121110111111111111111111111222212122112224222224499999444249991111111111111111
01110000111111111111111111111111111111110000000111111111111111121111111111114111112222212242142241222244424444449999111111111111
00000011000000111110001111111111100000001111111111111111112111111111111211111121111111222222122222222222424449999999999111101111
00111100111111100000000011111111111111111111111111111111111111111111114111111112111111111112222111221242222222442444999991111111
11111111111111111111111111111111111111111111111111111111111111111111111121111111111121114111111222211112222242222444444999999911
11111111111111111111110000111111111111111111111100111111111111111111111111111111121100000020011111112222111222222214424449999911
11111111111111111011111111100111111111000000011111111111111111111111111111111111111111211111111120011111222211121222241444499999
11111110011101111111100011111111111111111111100000000000100000000111110000000011111111111100200011110000111122221122224424444999
00011011101111111111111111100000000000000000000000000000011110000000001111110000000000111111111002004112100111112222122244244449
01111111111111111100000000000000000000000000000000000000000001111100000000001111111000000001111111100002111120111111221222444244
10111111111111111111111111111111111111111111111111111111110000000011111100000000000111111100000011111111110111111211112212122244
11001111111111110000000000000000000000000000000000000000001111111111100011111000000000000011111000001111111120211001111022212212
11110000000000000000000000000000000000000000000000000000000000000000011111111111111111100000000111100000111111110110211111012222
00000000000000000000000000000000000000000000000000000000000000000000000000000000011111011110000000011110000101111101100111110112
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000111111111111110001111011111112111111211102
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011100001111000111111111111111111210
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011111100111111000111111111102101
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011111011110000111110111120
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000111011000011111101101
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001111110000111111111
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001111100011011100
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011111010111111
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000111111101101
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011011111010
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000111111101
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000111110
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001111
__sfx__
00020000083100831008310083100a3100b3100c3100f31010310143101731011310113101131011310133101431016310183101a310133101331013310143101631017310193101a3101c3101d3101e31021310
00020000045200452006520085200e52016520135200e520095200552005520095200f520155201d520145200f5200d5200c5200d520155201d5201b520125200e5200f52012520175201c520225202a52031520
000900001c6201c6201d61021610276302c630376301e6301b6201862017620176201961018610136100f6100c6100b6100a6100961009610096100a6100b6100761004610036100261001610016100161001610
010500000062000620006310163002630036300363004630036300363002630026210162001620006200062000620006200162002611026100261002610016100161000610006010060000600006000060000600
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
012000000005001050000500105000050010500005001050040500505004050050500405005050040500505003050040500305004050030500405003050040500705008050070500805007050080500705008050
012000000c0550c0550c0550c0550c0550c0550c0550c05510055100551005510055100551005510055100550f0550f0550f0550f0550f0550f0550f0550f0551305513055130551305513055130551305513055
012000002762027620276202762027620276202762027620276202762027620276202762027620276202762027620276202762027620276202762027620276202762027620276202762027620276202762027620
012000003f3103f3103f3103f3003f3003f3103f3103f3003f3103f3103f3003f3103f3003f3103f3103f3103f3003f3103f3003f3003f3003f3103f3103f3103f3003f3003f3103f3103f3003f3003f3103f310
012000000061000610006100061000610006100061000610006100061000610006100061000610006100061000610006100061000610006100061000610006100061000610006100061000610006100061000610
012000000002400024000240002400024000240002400024000240002400024000240002400024000240002400024000240002400024000240002400024000240002400024000240002400024000240002400024
012000000c6100c6100c6100c6100c6100c6100c6100c6100c6100c6100c6100c6100c6100c6100c6100c6100c6100c6100c6100c6100c6100c6100c6100c6100c6100c6100c6100c6100c6100c6100c6100c610
__music__
00 0a421044
03 0a0b1044
03 0c0d4344
03 0e0f4344

